// Mocks generated by Mockito 5.4.6 from annotations
// in corigge/test/features/profile/profile_screen_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;
import 'dart:ui' as _i11;

import 'package:corigge/cache/shared_preferences_helper_wrapper.dart' as _i8;
import 'package:corigge/features/login/data/user_model.dart' as _i5;
import 'package:corigge/models/escola_model.dart' as _i7;
import 'package:corigge/services/auth_service_wrapper.dart' as _i3;
import 'package:corigge/services/escolas_service_wrapper.dart' as _i6;
import 'package:corigge/utils/utils_wrapper.dart' as _i9;
import 'package:dartz/dartz.dart' as _i2;
import 'package:flutter/material.dart' as _i10;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AuthServiceWrapper].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthServiceWrapper extends _i1.Mock
    implements _i3.AuthServiceWrapper {
  MockAuthServiceWrapper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<String, _i5.UserModel?>> signInWithGoogle() =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithGoogle,
          [],
        ),
        returnValue: _i4.Future<_i2.Either<String, _i5.UserModel?>>.value(
            _FakeEither_0<String, _i5.UserModel?>(
          this,
          Invocation.method(
            #signInWithGoogle,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Either<String, _i5.UserModel?>>);

  @override
  _i4.Future<_i2.Either<String, _i5.UserModel>> databaseUpdateUser(
          _i5.UserModel? user) =>
      (super.noSuchMethod(
        Invocation.method(
          #databaseUpdateUser,
          [user],
        ),
        returnValue: _i4.Future<_i2.Either<String, _i5.UserModel>>.value(
            _FakeEither_0<String, _i5.UserModel>(
          this,
          Invocation.method(
            #databaseUpdateUser,
            [user],
          ),
        )),
      ) as _i4.Future<_i2.Either<String, _i5.UserModel>>);

  @override
  _i4.Future<void> logout() => (super.noSuchMethod(
        Invocation.method(
          #logout,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}

/// A class which mocks [EscolasServiceWrapper].
///
/// See the documentation for Mockito's code generation for more information.
class MockEscolasServiceWrapper extends _i1.Mock
    implements _i6.EscolasServiceWrapper {
  MockEscolasServiceWrapper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<String, List<_i7.EscolaModel>>> getEscolas() =>
      (super.noSuchMethod(
        Invocation.method(
          #getEscolas,
          [],
        ),
        returnValue:
            _i4.Future<_i2.Either<String, List<_i7.EscolaModel>>>.value(
                _FakeEither_0<String, List<_i7.EscolaModel>>(
          this,
          Invocation.method(
            #getEscolas,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Either<String, List<_i7.EscolaModel>>>);
}

/// A class which mocks [SharedPreferencesHelperWrapper].
///
/// See the documentation for Mockito's code generation for more information.
class MockSharedPreferencesHelperWrapper extends _i1.Mock
    implements _i8.SharedPreferencesHelperWrapper {
  MockSharedPreferencesHelperWrapper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  set currentUser(_i5.UserModel? user) => super.noSuchMethod(
        Invocation.setter(
          #currentUser,
          user,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.Future<void> clearUserData() => (super.noSuchMethod(
        Invocation.method(
          #clearUserData,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> saveOrUpdateUserData(_i5.UserModel? user) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveOrUpdateUserData,
          [user],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}

/// A class which mocks [UtilsWrapper].
///
/// See the documentation for Mockito's code generation for more information.
class MockUtilsWrapper extends _i1.Mock implements _i9.UtilsWrapper {
  MockUtilsWrapper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void showTopSnackBar(
    _i10.BuildContext? context,
    String? message, {
    _i11.Color? color,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #showTopSnackBar,
          [
            context,
            message,
          ],
          {#color: color},
        ),
        returnValueForMissingStub: null,
      );
}
